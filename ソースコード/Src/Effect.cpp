//------------------------------------------------------------------------
// 映像効果処理 Effect.cpp
//------------------------------------------------------------------------

#include "Effect.h"
#include "Playchar.h"
#include "Map.h"

//------------------------------------------------------------------------
// 映像効果メインプロシージャのコンストラクタ
//------------------------------------------------------------------------
CEffectProc::CEffectProc(CGameMain* pGMain) : CBaseProc(pGMain)
{
	m_pEffectBomProc = new CEffectBomProc(m_pGMain);	// 映像効果・爆発プロシージャ
	m_pProcArray.push_back(m_pEffectBomProc);			// プロシージャをプロシージャ配列に登録する
}
//============================================================================
// プロシージャとオブジェクトを探索し全てのオブジェクトをノンアクティブにする
// プロシージャの開始フラグをリセットする
//============================================================================
void CEffectProc::SetNonActive()
{
	//オブジェクトポインタ配列の探索
	for (DWORD i = 0; i < m_pObjArray.size(); i++)
	{
		m_pObjArray[i]->SetActive( FALSE);
	}
	// 下位のプロシージャポインタ配列の探索
	for (DWORD i = 0; i < m_pProcArray.size(); i++)
	{
		m_pProcArray[i]->SetStartFlag(0);					// 開始フラグのリセット
		((CEffectProc*)m_pProcArray[i])->SetNonActive();    // 下位のプロシージャの処理（再帰処理）
	}
}

// ================================================================================================================================
// 各映像効果プロシージャ毎の処理
// ================================================================================================================================

//------------------------------------------------------------------------
// 映像効果・爆発プロシージャのコンストラクタ
//------------------------------------------------------------------------
CEffectBomProc::CEffectBomProc(CGameMain* pGMain) : CBaseProc(pGMain)
{
	for (DWORD i = 0; i < EFFECT_BOM_MAX; i++)
	{
		m_pObjArray.push_back(new CEffectBomObj(m_pGMain));	// m_pObjArrayに映像効果・爆発オブジェクトを生成する
	}
}

//-----------------------------------------------------------------------------
// 映像効果・爆発プロシージャの開始
//
// VECTOR2 vPos 発生位置
//
// 戻り値 正常に発生 : TRUE 発生しなかった : FALSE
//-----------------------------------------------------------------------------
BOOL CEffectBomProc::Start(VECTOR2 vPos)
{
	BOOL bRet = FALSE;

	for (DWORD i = 0; i < m_pObjArray.size(); i++)
	{
		if (!m_pObjArray[i]->GetActive() )
		{
			m_pObjArray[i]->Start(vPos);	// 映像効果・爆発の発生
			m_pGMain->m_pSeHit->Play();
			bRet = TRUE;
			break;
		}
	}

	return TRUE;
}

//------------------------------------------------------------------------
// 映像効果・爆発オブジェクトのコンストラクタ	
// 引数　なし
//------------------------------------------------------------------------
CEffectBomObj::CEffectBomObj(CGameMain* pGMain) : CBaseObj(pGMain)
{
	m_pSprite = new CSprite(m_pGMain->m_pImageSprite, 144, 480, 64, 64);
	m_nAnimNum = 7;
}
// ---------------------------------------------------------------------------
// 映像効果・爆発オブジェクトのデストラクタ
// ---------------------------------------------------------------------------
CEffectBomObj::~CEffectBomObj()
{
	SAFE_DELETE(m_pSprite);
}
//-----------------------------------------------------------------------------
// 映像効果・爆発オブジェクトの開始
//
// VECTOR2 vPos 発生位置
//
// 戻り値 TRUE
//-----------------------------------------------------------------------------
BOOL CEffectBomObj::Start(VECTOR2 vPos)
{
	m_bActive = TRUE;
	m_dwStatus = NORMAL;
	m_dwStatusSub = STOP;
	m_dwStatusPhase = 0;

	m_vPos = vPos;	// 発生位置

	m_nAnimIdx = 0;

	return TRUE;
}
//-----------------------------------------------------------------------------
// 映像効果・爆発オブジェクトの更新
//
// 引数 なし
//-----------------------------------------------------------------------------
void CEffectBomObj::Update()
{
	if (m_bActive)
	{
		if (AnimCountup() == 1)
		{
			m_bActive = FALSE;
		}
		Draw();
	}
}
